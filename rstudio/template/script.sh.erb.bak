#!/usr/bin/env bash

ARCH=`arch`
if [ $ARCH = aarch64 ]; then
  IMAGE=/home/apps/singularity/ondemand/rstudio_ubi86_${ARCH}.sif
else
  IMAGE=/home/apps/singularity/ondemand/rstudio_ubi84_${ARCH}.sif
fi

# Load the required environment
setup_env () {
  export PATH="$PATH:/usr/lib/rstudio-server/bin"
  export SINGULARITYENV_PATH="$PATH"
  # In Singularity 3.5.x it became necessary to explicitly pass LD_LIBRARY_PATH
  # to the singularity process
  export SINGULARITYENV_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
}
setup_env

export RSTUDIO_AUTH="${PWD}/bin/auth"
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  export MODULEPATH="$MODULEPATH"
  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"
  exec &>>"\${RSESSION_LOG_FILE}"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

export LANG=C
export SINGULARITYENV_XDG_DATA_HOME=${HOME}/ondemand/rstudio/`arch`
export SINGULARITYENV_TMPDIR=${SINGULARITYENV_XDG_DATA_HOME}/tmp
export SINGULARITYENV_XDG_RUNTIME_DIR=${SINGULARITYENV_TMPDIR}
export SINGULARITY_BINDPATH=/data,/work,/sys,/var/opt,/usr/share/Modules,/etc/profile.d/zFJSVlangload.sh,${SINGULARITYENV_TMPDIR}/lib:/var/lib/rstudio-server

mkdir -p $SINGULARITYENV_TMPDIR/lib
mkdir -p $SINGULARITYENV_TMPDIR/rstudio-server
python3 -c 'from uuid import uuid4; print(uuid4())' > "$SINGULARITYENV_TMPDIR/rstudio-server/secure-cookie-key"
chmod 0600 "$SINGULARITYENV_TMPDIR/rstudio-server/secure-cookie-key"
NV_OPTION=""
CUDA_VERSION=11.5
if [ -e /usr/local/cuda-$CUDA_VERSION ]; then
  export SINGULARITY_BINDPATH=$SINGULARITY_BINDPATH,/usr/local/cuda-$CUDA_VERSION:/usr/local/cuda
  NV_OPTION="--nv"
fi
for i in `ls -l /opt | grep ^d | awk '{print $9}'`; do
  export SINGULARITY_BINDPATH=$SINGULARITY_BINDPATH,/opt/$i
done
for i in /vol0001 /vol0003 /vol0004 /vol0005 /vol0006 /lib64/liblustreapi.so /run/psv; do
    [ -e $i ] && export SINGULARITY_BINDPATH=$SINGULARITY_BINDPATH,$i
done

singularity run $NV_OPTION $IMAGE rserver \
 --www-port "${port}" \
 --auth-none 0 \
 --auth-pam-helper-path "${RSTUDIO_AUTH}" \
 --auth-encrypt-password 0 \
 --rsession-path "${RSESSION_WRAPPER_FILE}" \
 --server-data-dir $TMPDIR/rstudio-server \
 --secure-cookie-key-file $TMPDIR/rstudio-server/secure-cookie-key \
 --server-user `whoami`

echo 'Singularity as exited...'
